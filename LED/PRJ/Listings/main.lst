C51 COMPILER V9.54   MAIN                                                                  09/08/2022 11:14:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\ying_yong\keil5\C51\BIN\C51.EXE ..\SRC\main.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC51.h"
   2          #if TIME_
              create_time c51_time;
              #endif
   5          #if KEY_
              create_key c51_key; 
              #endif
   8          #if LED_
   9          create_led c51_led;
  10          #endif
  11          #if BEEP_
              create_beep c51_beep;
              #endif
  14          #if SMG_
              create_nixie_tube c51_nixie_tube;
              
              #endif
  18          #if USART
              create_usart c51_usart;
              #endif
  21          
  22          main()
  23          {
  24   1        
  25   1          int i,j,k;
  26   1          
  27   1          #if LED_
  28   1          int arr[8]={LED1,LED2,LED3,LED4,LED5,LED6,LED7,LED8};
  29   1          int arr1[8]={LED1,0,LED3,0,LED5,0,LED7,0};
  30   1          int arr2[8]={0,LED2,0,LED4,0,LED6,0,LED8};
  31   1          int *arr_list[2]={arr1,arr2};
  32   1          
  33   1          led_init(&c51_led);
  34   1          #endif
  35   1          #if KEY_
                  key_init(&c51_key);
                  #endif
  38   1          #if BEEP_
                  beep_init(&c51_beep);
                  #endif
  41   1          #if SMG_
                  nixie_tube_init(&c51_nixie_tube); 
                  #endif
  44   1      #if TIME_ 
                  //打开定时器0   
                  c51_time.time0=TIME0ON;
                   //10ms一个中断
                  c51_time.time0_ms=50;
                  //关闭定时器1
                  c51_time.time1=TIME1OFF;
                  c51_time.time1_ms=50;
                
                  c51_time.time_type=0;
                  time_init(&c51_time);
C51 COMPILER V9.54   MAIN                                                                  09/08/2022 11:14:09 PAGE 2   

              #endif
  56   1        
  57   1      #if USART
                  //设置波特率为9600
                  c51_usart.baud_rate=9600;
                  usart_init(&c51_usart);
              #endif    
  62   1          
  63   1      
  64   1          
  65   1        while(1)
  66   1        {
  67   2        
  68   2             //从左到右依次点亮，间隔200ms
  69   2             for(i=1;i<=8;i++)
  70   2             {
  71   3                c51_led.led_on(i);
  72   3                delayms(200);
  73   3             }
  74   2             c51_led.led_all_off();
  75   2             delayms(2000);
  76   2             
  77   2             
  78   2             //从右到左依次点亮，间隔200ms
  79   2              for(i=8;i>=1;i--)
  80   2             {
  81   3                c51_led.led_on(i);
  82   3                delayms(200);
  83   3             }
  84   2             c51_led.led_all_off();
  85   2             delayms(2000);
  86   2             
  87   2             
  88   2             //从中间到两边依次点亮三次，间隔200ms
  89   2             for(i=0;i<=2;i++)
  90   2             {
  91   3                for(j=4,k=5;j>=1;j--,k++)
  92   3               {
  93   4                 c51_led.led_on(j);
  94   4                 c51_led.led_on(k);
  95   4                 delayms(200);
  96   4               }
  97   3               c51_led.led_all_off();
  98   3             }
  99   2             delayms(2000);
 100   2             
 101   2             
 102   2             //从两边到中间依次点亮三次，间隔200ms
 103   2             for(i=0;i<=2;i++)
 104   2             {
 105   3                for(j=1,k=8;j<=4;j++,k--)
 106   3               {
 107   4                 c51_led.led_on(j);
 108   4                 c51_led.led_on(k);
 109   4                 delayms(200);
 110   4                 
 111   4               }
 112   3               c51_led.led_all_off();
 113   3             }
 114   2             delayms(2000);
 115   2             
 116   2             //全亮全灭三次
C51 COMPILER V9.54   MAIN                                                                  09/08/2022 11:14:09 PAGE 3   

 117   2             for(i=0;i<=2;i++)
 118   2             {
 119   3               c51_led.leds_flicker(arr,200,400);
 120   3             }
 121   2             
 122   2              c51_led.led_all_off();
 123   2             delayms(2000);
 124   2             
 125   2             //第一个灯闪烁1次，第二个灯闪烁2次，依次类推。
 126   2             for(i=1;i<=8;i++)
 127   2             {
 128   3                c51_led.led_flicker(i,200,i*200); 
 129   3             }
 130   2             
 131   2              c51_led.led_all_off();
 132   2             delayms(2000);
 133   2             
 134   2             //1 3 5 7    2 4 6 8交叉亮 
 135   2             for(i=0;i<=2;i++)
 136   2             {
 137   3               for(j=0;j<=1;j++)
 138   3               {
 139   4                  c51_led.leds_flicker(arr_list[j],200,400);
 140   4               }
 141   3                c51_led.led_all_off();
 142   3             }
 143   2              c51_led.led_all_off();
 144   2              delayms(2000);
 145   2             
 146   2             
 147   2      
 148   2        }
 149   1          
 150   1        
 151   1      }
 152          #if USART
              void usart_rx_func_handle (void)
              {
                  unsigned  char  res;
                  RI=0;
                  c51_led.led_on(1);
                  res =SBUF;
                    if((c51_usart.USART_RX_STA&0x8000)==0)//接收未完成
                  {
                    if(c51_usart.USART_RX_STA&0x4000)//接收到了0x0d
                    {
                      if(res!=0x0a)c51_usart.USART_RX_STA=0;//接收错误,重新开始
                      else c51_usart.USART_RX_STA|=0x8000;  //接收完成了 
                    }else //还没收到0X0D
                    { 
                      if(res==0x0d)c51_usart.USART_RX_STA|=0x4000;
                      else
                      {
                        c51_usart.USART_RX_BUF[c51_usart.USART_RX_STA&0X3FFF]=res;
                        c51_usart.USART_RX_STA++;
                        if(c51_usart.USART_RX_STA>(USART_REC_LEN-1))c51_usart.USART_RX_STA=0;//接收数据错误,重新开始接收    
                      }    
                    }
                  }
                       
              }
              #endif
C51 COMPILER V9.54   MAIN                                                                  09/08/2022 11:14:09 PAGE 4   

 179          #if TIME_  
              void time_run_func_handle(void)
              {
                 static int time0_i=0;
                 static int time1_i=0;
                 
                 
              
              
                if(c51_time.time_type==TIME0)
                {
                  
              
                   
              //     c51_beep.inpt_time=20;
              //     c51_beep.in_time_interrupt(100,0.5);
                   c51_key.key=c51_key.whitch_key_down();
                   c51_nixie_tube.arr[0]=c51_key.key/10;
                   c51_nixie_tube.arr[1]=c51_key.key%10;
                   if(time0_i%2==0)
                   {
                   c51_nixie_tube.show_number(1,c51_nixie_tube.arr[0]);
                   }
                   else
                   {
                   c51_nixie_tube.show_number(2,c51_nixie_tube.arr[1]);
                   }
              
                  
                
                   time0_i++;
              
                   if(time0_i>20)
                   {
                     time0_i=0;
                   }
                  
                }
                else if(c51_time.time_type==TIME1)
                {
                 
              
                   if(time0_i%50==0)
                   {
                      //c51_led.led_on(2);
                  }
                  else
                  {
                     //c51_led.led_off(2);
                  }
                
                  time1_i++;
              
              
                
                }
                
                
                c51_time.time_type=0;
                
              }
              #endif
C51 COMPILER V9.54   MAIN                                                                  09/08/2022 11:14:09 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    864    ----
   CONSTANT SIZE    =     54    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     15      60
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
