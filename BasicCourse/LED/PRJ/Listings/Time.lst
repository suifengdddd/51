C51 COMPILER V9.54   TIME                                                                  09/07/2022 14:46:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN .\Objects\Time.obj
COMPILER INVOKED BY: D:\ying_yong\keil5\C51\BIN\C51.EXE ..\CODE\Time.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\Time.lst) TABS(2) OBJECT(.\Objects\Time.obj)

line level    source

   1          #include "Time.h"
   2          /*注意当time0和time1同时打开时请设置
   3           *c51_time.time0_ms
   4           *c51_time.time1_ms
   5           *两个都要大于3
   6           *此时如果有动态数码管那么会看到明显闪烁
   7           *平常使用时尽量只开一个定时器
   8           */
   9          #if TIME_
  10          static void time_again_init(create_time * time_object);
  11          
  12          /**
  13            * @brief          初始化time对象
  14            * @param[in]      time_object：time对象指针
  15            * @retval         NULL
  16            */
  17          void time_init(create_time *time_object)
  18          {
  19   1         time_object->time_run_func_handle=time_run_func_handle;
  20   1         time_object->time_again_init=time_again_init;
  21   1         time_object->time1_i=0;
  22   1         time_object->time0_i=0;
  23   1         
  24   1        
  25   1         if(time_object->time0==TIME0ON&&time_object->time1==TIME1OFF)
  26   1         {
  27   2            
  28   2           TMOD=0x01;//设置定时器0为工作方式1
  29   2           TH0=(65536-(921600/(1000/time_object->time0_ms)))/256;
  30   2           TL0=(65536-(921600/(1000/time_object->time0_ms)))%256;
  31   2           EA=1;//中断总控制位
  32   2           ET0=1;//定时器中断运行位
  33   2           TR0=1;//定时器0运行控制位
  34   2           
  35   2         }
  36   1         else if(time_object->time0==TIME0OFF&&time_object->time1==TIME1ON)
  37   1         {
  38   2            
  39   2           TMOD=0x10;//设置定时器1为工作方式1
  40   2           TH1=(65536-(921600/(1000/time_object->time1_ms)))/256;
  41   2           TL1=(65536-(921600/(1000/time_object->time1_ms)))%256;
  42   2           EA=1;//中断总控制位
  43   2           ET1=1;//定时器中断运行位
  44   2           TR1=1;//定时器0运行控制位
  45   2          
  46   2         }
  47   1         else if(time_object->time0==TIME0ON&&time_object->time1==TIME1ON)
  48   1         {
  49   2           EA=0;//中断总控制位
  50   2           TMOD=0x11;//设置定时器1为工作方式1
  51   2         
  52   2           
  53   2           TH1=(65536-(921600/(1000/time_object->time1_ms)))/256;
  54   2           TL1=(65536-(921600/(1000/time_object->time1_ms)))%256;
C51 COMPILER V9.54   TIME                                                                  09/07/2022 14:46:29 PAGE 2   

  55   2           ET1=1;//定时器中断运行位
  56   2           TR1=1;//定时器0运行控制位
  57   2           
  58   2           TH0=(65536-(921600/(1000.0/time_object->time0_ms)))/256;
  59   2           TL0=(65536-(921600/(1000/time_object->time0_ms)))%256;
  60   2           
  61   2           ET0=1;//定时器中断运行位
  62   2           TR0=1;//定时器0运行控制位
  63   2           EA=1;//中断总控制位
  64   2          
  65   2         }
  66   1        
  67   1      }
  68          /**
  69            * @brief          重新填充THX和TLX
  70            * @param[in]      time_object：time对象指针
  71            * @retval         NULL
  72            */
  73          static void time_again_init(create_time * time_object)
  74          {
  75   1        if(time_object->time0==TIME0ON&&time_object->time_type==TIME0)
  76   1        {
  77   2        
  78   2           TH0=(65536-(921600/(1000/time_object->time0_ms)))/256;
  79   2           TL0=(65536-(921600/(1000/time_object->time0_ms)))%256;
  80   2          
  81   2        }
  82   1        else if(time_object->time1==TIME1ON&&time_object->time_type==TIME1)
  83   1        {
  84   2          
  85   2            TH1=(65536-(921600/(1000/time_object->time1_ms)))/256;
  86   2           TL1=(65536-(921600/(1000/time_object->time1_ms)))%256;
  87   2      
  88   2      
  89   2           
  90   2        }
  91   1        
  92   1        
  93   1      
  94   1      }
  95           int time_out(int ms)
  96           {
  97   1         
  98   1         
  99   1           EA=0;  
 100   1          if(c51_time.time0==TIME0ON&&c51_time.time1==TIME1OFF)
 101   1          {
 102   2              if((c51_time.time0_i%(ms/c51_time.time0_ms))==0)
 103   2              {
 104   3                return 1;
 105   3              }
 106   2              else
 107   2              {
 108   3                 return 0;
 109   3              }
 110   2          }
 111   1          else 
 112   1          {
 113   2            
 114   2                if((c51_time.time1_i%(ms/c51_time.time1_ms))==0)
 115   2                {
 116   3                    return 1;
C51 COMPILER V9.54   TIME                                                                  09/07/2022 14:46:29 PAGE 3   

 117   3                }
 118   2                else
 119   2                {
 120   3                    return 0;
 121   3                }
 122   2            
 123   2          }
 124   1          EA=1;
 125   1       }
 126             
 127          //定时器0中断函数
 128          void T0_time() interrupt 1
 129          {
 130   1        
 131   1          c51_time.time_type=TIME0;
 132   1          c51_time.time_again_init(&c51_time);
 133   1          c51_time.time_run_func_handle();
 134   1      
 135   1      }
 136          //定时器1中断函数
 137          void T1_time() interrupt 3
 138          {  
 139   1      
 140   1          
 141   1          c51_time.time_type=TIME1;
 142   1          c51_time.time_again_init(&c51_time);
 143   1          c51_time.time_run_func_handle();
 144   1        
 145   1      }
 146          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1251    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
