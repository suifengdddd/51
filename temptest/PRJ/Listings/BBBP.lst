C51 COMPILER V9.54   BBBP                                                                  09/18/2022 21:48:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BBBP
OBJECT MODULE PLACED IN .\Objects\BBBP.obj
COMPILER INVOKED BY: D:\ying_yong\keil5\C51\BIN\C51.EXE ..\CODE\BBBP.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\INC) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\BBBP.lst) TABS(2) OBJECT(.\Objects\BBBP.obj)

line level    source

   1          #include "BEEP.h"
   2          #if BEEP_
   3          static void beep_on(void);
   4          static void beep_off(void);
   5          static void in_time_interrupt(int ms,int duty_cycle)reentrant;
   6          /**
   7            * @brief          初始化beep对象
   8            * @param[in]      beep_object：beep对象指针
   9            * @retval         NULL
  10            */
  11          void beep_init(create_beep *beep_object)
  12          {
  13   1         beep_object->beep_on=beep_on;
  14   1         beep_object->beep_off=beep_off;
  15   1         beep_object->in_time_interrupt=in_time_interrupt;
  16   1         beep_object->inpt_time=10;
  17   1      
  18   1         
  19   1      }
  20          /**
  21            * @brief          打开嗡鸣器
  22            * @param[in]      NUUL
  23            * @retval         NULL
  24            */
  25          static void beep_on(void)
  26          {
  27   1         BEEP_GPIO=0;
  28   1      }
  29          /**
  30            * @brief          关闭嗡鸣器
  31            * @param[in]      NUUL
  32            * @retval         NULL
  33            */
  34          static void beep_off(void)
  35          {
  36   1        BEEP_GPIO=1;
  37   1      }
  38          /**
  39            * @brief          让嗡鸣器以ms为周期，duty_cycle为占空比响
  40            * @param[in]      ms：             周期(注意要大于定时器定时周期)
  41            *                 duty_cycle:      占空比
  42            *             
  43            *             
  44            *                 注意如果：同时使用两个定时器请指定定时器定时周期(这个函数在哪里运行就指定那个)
  45            * @retval         NULL
  46            */
  47          static void in_time_interrupt(int ms,int duty_cycle)reentrant
  48          {
  49   1      
  50   1      
  51   1          static unsigned int i=0;
  52   1          int inpt_time=0;
  53   1        
  54   1          int high_time=0;
C51 COMPILER V9.54   BBBP                                                                  09/18/2022 21:48:24 PAGE 2   

  55   1          if(c51_time.time0==TIME0ON&&c51_time.time1==TIME1OFF)
  56   1          {
  57   2             inpt_time=c51_time.time0_ms;
  58   2          }
  59   1          else if (c51_time.time0==TIME0OFF&&c51_time.time1==TIME1ON)
  60   1          {
  61   2             inpt_time=c51_time.time1_ms;
  62   2          }
  63   1          else
  64   1          {
  65   2            inpt_time = c51_beep.inpt_time;
  66   2          }
  67   1          
  68   1          high_time=duty_cycle*ms;//高电平执行时间
  69   1        
  70   1             if(i*inpt_time<=high_time)
  71   1            {
  72   2               BEEP_GPIO=0;
  73   2               
  74   2            }
  75   1            else if (high_time<i*inpt_time&&i*inpt_time<=ms)
  76   1            {
  77   2               BEEP_GPIO=1;
  78   2            }
  79   1            
  80   1      
  81   1         i++;
  82   1          if(i*inpt_time>ms)
  83   1          {
  84   2            i=0;
  85   2          }       
  86   1        }
  87          
  88          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
